name: CI
on: [push]
env:
  JDK_11_VERSION: 11
  JDK_17_VERSION: 17
jobs:
  quarkus-jpastreamer:
    runs-on: ubuntu-latest
    name: quarkus-jpastreamer maven jvm 17
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: java-cache
        with:
          path: |
            ./.n
            ./.m2
            ./.docker
            ~/.m2/repository
            !~/.m2/repository/daggerok
            !~/.m2/repository/com/github/daggerok
          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml', '**/gradle.*', '**/*.gradle') }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JDK_17_VERSION }}
      - run: docker run -d --rm --platform=linux/amd64 --name restsql-mysql-sakila -p 3306:3306 restsql/mysql-sakila
      - run: sleep 30 ; docker ps
      - run: ./mvnw -f quarkus-jpastreamer clean package
      #- run: sudo apt-get install --fix-missing httpie
      #- run: cd $GITHUB_WORKSPACE/reactive-qute && ./mvnw docker:build docker:start
      #- run: http get :8080
      #- run: cd $GITHUB_WORKSPACE/reactive-qute && ./mvnw docker:stop docker:remove
  reactive-qute-maven-linux-jvm-build:
    runs-on: ubuntu-latest
    name: reactive-qute maven jvm 11
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: java-cache
        with:
          path: |
            ./.n
            ./.m2
            ./.docker
            ~/.m2/repository
            !~/.m2/repository/daggerok
            !~/.m2/repository/com/github/daggerok
          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml', '**/gradle.*', '**/*.gradle') }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JDK_11_VERSION }}
      - run: sudo apt-get install --fix-missing httpie
      - run: cd $GITHUB_WORKSPACE/reactive-qute && ./mvnw
      - run: cd $GITHUB_WORKSPACE/reactive-qute && ./mvnw docker:build docker:start
      - run: http get :8080
      - run: cd $GITHUB_WORKSPACE/reactive-qute && ./mvnw docker:stop docker:remove
  reactive-qute-maven-linux-native-build:
    runs-on: ubuntu-latest
    name: reactive-qute gradle native jvm 11
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: java-cache
        with:
          path: |
            ./.n
            ./.m2
            ./.docker
            ~/.m2/repository
            !~/.m2/repository/daggerok
            !~/.m2/repository/com/github/daggerok
          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml', '**/gradle.*', '**/*.gradle') }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JDK_11_VERSION }}
      - run: sudo apt-get install --fix-missing httpie
      - run: cd $GITHUB_WORKSPACE/reactive-qute && ./mvnw -Pnative -Dquarkus.native.container-build=true
      - run: cd $GITHUB_WORKSPACE/reactive-qute && ./mvnw -Pnative docker:build docker:start
      - run: http get :8080
      - run: cd $GITHUB_WORKSPACE/reactive-qute && ./mvnw docker:stop docker:remove
  reactive-qute-gradle-linux-jvm-build:
    runs-on: ubuntu-latest
    name: reactive-qute gradle jvm 11
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: java-cache
        with:
          path: |
            ./.n
            ./.m2
            ./.docker
            ~/.m2/repository
            !~/.m2/repository/daggerok
            !~/.m2/repository/com/github/daggerok
          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml', '**/gradle.*', '**/*.gradle') }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JDK_11_VERSION }}
      - run: sudo apt-get install --fix-missing httpie
      - run: cd $GITHUB_WORKSPACE/reactive-qute && ./gradlew build -x test
      - run: cd $GITHUB_WORKSPACE/reactive-qute && ( ./gradlew quarkusDev || true ) &
      - run: cd $GITHUB_WORKSPACE/reactive-qute && ./gradlew --stop || echo ...
      - run: cd $GITHUB_WORKSPACE/reactive-qute && ./gradlew quarkusBuild dockerBuild dockerStart
      - run: |
          cd $GITHUB_WORKSPACE/reactive-qute
          ( ./gradlew dockerLogs & ) || true
          sleep 5s
          http get :8080
          ./gradlew dockerStop
  reactive-qute-gradle-linux-native-build:
    runs-on: ubuntu-latest
    name: reactive-qute gradle native jvm 11
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: java-cache
        with:
          path: |
            ./.n
            ./.m2
            ./.docker
            ~/.m2/repository
            !~/.m2/repository/daggerok
            !~/.m2/repository/com/github/daggerok
          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml', '**/gradle.*', '**/*.gradle') }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JDK_11_VERSION }}
      - run: sudo apt-get install --fix-missing httpie
      - run: cd $GITHUB_WORKSPACE/reactive-qute && ./gradlew assemble
      - run: cd $GITHUB_WORKSPACE/reactive-qute && ( ./gradlew quarkusDev || true ) &
      - run: cd $GITHUB_WORKSPACE/reactive-qute && ./gradlew --stop || echo ...
      - run: cd $GITHUB_WORKSPACE/reactive-qute && ./gradlew quarkusBuild buildNative --docker-build=true
      - run: cd $GITHUB_WORKSPACE/reactive-qute && QUARKUS_NATIVE=1 ./gradlew dockerBuild dockerStart
      - run: |
          cd $GITHUB_WORKSPACE/reactive-qute
          ( ./gradlew dockerLogs & ) || true
          sleep 5s
          http get :8080
          QUARKUS_NATIVE=true ./gradlew dockerStop
  build-linux:
    runs-on: ubuntu-latest
    name: qute-mvc jvm 11
    steps:
      - uses: actions/checkout@v3
      - uses: actions/cache@v3
        id: java-cache
        with:
          path: |
            ./.n
            ./.m2
            ./.docker
            ~/.m2/repository
            !~/.m2/repository/daggerok
            !~/.m2/repository/com/github/daggerok
          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml', '**/gradle.*', '**/*.gradle') }}
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ env.JDK_11_VERSION }}
      - run: ./mvnw -f qute-mvc
      - run: |
          java -jar $GITHUB_WORKSPACE/qute-mvc/target/*-runner.jar &
          sudo apt-get update -yqq
          sudo apt-get install -yqq httpie
          http get :8080/api/v1/my-resource
#  build-macOS: # TODO: FIXME:
#    runs-on: ubuntu-latest
#    name: qute-mvc jvm 11
#    steps:
#      - uses: actions/checkout@v3
#      - uses: actions/cache@v3
#        id: java-cache
#        with:
#          path: |
#            ./.n
#            ./.m2
#            ./.docker
#            ~/.m2/repository
#            !~/.m2/repository/daggerok
#            !~/.m2/repository/com/github/daggerok
#          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml', '**/gradle.*', '**/*.gradle') }}
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: ${{ env.JDK_11_VERSION }}
#      - run: ./mvnw -f qute-mvc
#      - run: |
#          java -jar $GITHUB_WORKSPACE/qute-mvc/target/*-runner.jar &
#          brew reinstall httpie
#          http get :8080/api/v1/my-resource
#  build-windows: # TODO: FIXME:
#    runs-on: ubuntu-latest
#    name: qute-mvc jvm 11
#    steps:
#      - name: Git clone
#        uses: actions/checkout@v3
#      - uses: actions/cache@v3
#        id: java-cache
#        with:
#          path: |
#            ./.n
#            ./.m2
#            ./.docker
#            ~/.m2/repository
#            !~/.m2/repository/daggerok
#            !~/.m2/repository/com/github/daggerok
#          key: ${{ runner.os }}-${{ hashFiles('**/pom.xml', '**/gradle.*', '**/*.gradle') }}
#      - uses: actions/setup-java@v3
#        with:
#          distribution: 'temurin'
#          java-version: ${{ env.JDK_11_VERSION }}
#      - name: Set up maven
#        uses: stCarolas/setup-maven@v3
#        with:
#          maven-version: 3.6.3
#      - shell: cmd
#        run: call mvnw.cmd -Dfile.encoding="UTF-8" -f %GITHUB_WORKSPACE%\qute-mvc
